<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= pageTitle %></title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
  <style>
    /* Include the same base styles as tasks.ejs */
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: system-ui, -apple-system, "Segoe UI", Roboto, sans-serif;
    }

    body {
      display: flex;
      min-height: 100vh;
      background-color: #f5f7fa;
      color: #2d3748;
    }

    /* Sidebar Styles */
    .sidebar {
      width: 220px;
      background-color: #2c3e50; /* Deep blue-gray */
      color: white;
      padding: 20px 0;
      height: 100vh;
      position: fixed;
      overflow-y: auto;
    }

    .sidebar h2 {
      text-align: center;
      margin-bottom: 20px;
      color: #ecf0f1; /* Off-white */
    }

    .sidebar hr {
      border: none;
      height: 1px;
      background-color: rgba(255, 255, 255, 0.1);
      margin-bottom: 20px;
    }

    .nav-links a {
      display: block;
      color: #bdc3c7; /* Light gray */
      text-decoration: none;
      padding: 10px 20px;
      margin-bottom: 5px;
      border-radius: 4px;
      transition: all 0.2s ease;
    }

    .nav-links a:hover {
      background-color: rgba(255, 255, 255, 0.1);
      color: white;
    }

    .nav-links a.active {
      background-color: #3498db; /* Bright blue */
      color: white;
    }

    .nav-links i {
      width: 20px;
      margin-right: 10px;
    }

    /* Content Area */
    .content {
      flex-grow: 1;
      padding: 25px;
      width: calc(100% - 250px);
    }

    /* Form Card */
    .form-card {
      background-color: white;
      border-radius: 10px;
      box-shadow: 0 2px 10px rgba(0,0,0,0.05);
      padding: 30px;
      margin-bottom: 30px;
    }

    /* Page Header */
    .page-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 25px;
    }

    .page-title {
      font-size: 1.75rem;
      color: #2c3e50;
      font-weight: 700;
    }

    .back-btn {
      display: inline-flex;
      align-items: center;
      gap: 8px;
      padding: 10px 16px;
      background-color: #f1f5f9;
      color: #64748b;
      border-radius: 6px;
      text-decoration: none;
      font-weight: 500;
      transition: all 0.2s ease;
    }

    .back-btn:hover {
      background-color: #e2e8f0;
      color: #475569;
    }

    /* Form Styles */
    .form-group {
      margin-bottom: 20px;
    }

    .form-label {
      display: block;
      margin-bottom: 8px;
      font-weight: 500;
      color: #4a5568;
    }

    .form-input, 
    .form-textarea, 
    .form-select {
      width: 100%;
      padding: 12px 15px;
      border: 1px solid #e2e8f0;
      border-radius: 6px;
      font-size: 1rem;
      color: #2d3748;
      transition: all 0.2s ease;
      background-color: #f8fafc;
    }

    .form-input:focus, 
    .form-textarea:focus,
    .form-select:focus {
      outline: none;
      border-color: #3498db;
      box-shadow: 0 0 0 3px rgba(66, 153, 225, 0.15);
    }

    .form-textarea {
      min-height: 150px;
      resize: vertical;
    }

    .form-select {
      appearance: none;
      background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='%23a0aec0' width='24px' height='24px'%3E%3Cpath d='M7 10l5 5 5-5z'/%3E%3C/svg%3E");
      background-repeat: no-repeat;
      background-position: right 10px center;
    }

    .date-row {
      display: flex;
      gap: 20px;
    }

    .date-row .form-group {
      flex: 1;
    }

    /* Submit Button */
    .form-submit {
      margin-top: 30px;
      display: flex;
      justify-content: flex-end;
      gap: 15px;
    }

    .cancel-btn, 
    .submit-btn {
      padding: 12px 25px;
      border-radius: 6px;
      font-size: 1rem;
      font-weight: 500;
      cursor: pointer;
      transition: all 0.2s ease;
      border: none;
    }

    .cancel-btn {
      background-color: #f1f5f9;
      color: #64748b;
    }

    .cancel-btn:hover {
      background-color: #e2e8f0;
      color: #475569;
    }

    .submit-btn {
      background-color: #3498db;
      color: white;
    }

    .submit-btn:hover {
      background-color: #2980b9;
    }

    /* Error Styles */
    .error-message {
      color: #e53e3e;
      font-size: 0.9rem;
      margin-top: 5px;
      padding: 10px;
      background-color: #fff5f5;
      border-radius: 4px;
      margin-bottom: 20px;
    }

    /* Responsive */
    @media (max-width: 768px) {
      .sidebar {
        width: 70px;
      }
      
      .sidebar h2, .nav-links a span {
        display: none;
      }
      
      .nav-links i {
        margin-right: 0;
      }
      
      .nav-links a {
        justify-content: center;
      }
      
      .content {
        margin-left: 70px;
        width: calc(100% - 70px);
      }
      
      .date-row {
        flex-direction: column;
        gap: 0;
      }
    }
  </style>
</head>
<body>
 
  

  <!-- Main Content -->
  <div class="content">
    <div class="page-header">
      <h1 class="page-title">Create New Task</h1>
      <a href="/teacher/tasks" class="back-btn">
        <i class="fas fa-arrow-left"></i> Back to Tasks
      </a>
    </div>

    <div class="form-card">
      <% if (error) { %>
        <div class="error-message">
          <i class="fas fa-exclamation-circle"></i> <%= error %>
        </div>
      <% } %>
      
      <form action="/teacher/tasks/create" method="POST">
        <div class="form-group">
          <label for="title" class="form-label">Task Title</label>
          <input type="text" id="title" name="title" class="form-input" placeholder="Enter task title" required>
        </div>

        <div class="form-group">
          <label for="classId" class="form-label">Assign to Class</label>
          <select id="classId" name="classId" class="form-select" required>
            <option value="" disabled selected>Select a class</option>
            <% if (classes && classes.length > 0) { %>
              <% classes.forEach(classItem => { %>
                <option value="<%= classItem._id %>"><%= classItem.name %>-<%= classItem.section %></option>
              <% }); %>
            <% } %>
          </select>
        </div>

        <div class="form-group">
          <label for="description" class="form-label">Task Description</label>
          <textarea id="description" name="description" class="form-textarea" placeholder="Enter task details" required></textarea>
        </div>

        <div class="date-row">
          <div class="form-group">
            <label for="startDate" class="form-label">Start Date</label>
            <input type="date" id="startDate" name="startDate" class="form-input" required>
          </div>

          <div class="form-group">
            <label for="dueDate" class="form-label">Due Date</label>
            <input type="date" id="dueDate" name="dueDate" class="form-input" required>
          </div>
        </div>

        <div class="form-group">
          <label for="maxMarks" class="form-label">Maximum Marks</label>
          <input type="number" id="maxMarks" name="maxMarks" class="form-input" min="1" max="100" value="10" required>
        </div>

        <div class="form-submit">
          <button type="button" class="cancel-btn" onclick="location.href='/teacher/tasks'">Cancel</button>
          <button type="submit" class="submit-btn">Create Task</button>
        </div>
      </form>
    </div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Set default dates
      const today = new Date().toISOString().split('T')[0];
      document.getElementById('startDate').value = today;
      
      // Set default due date to one week from today
      const nextWeek = new Date();
      nextWeek.setDate(nextWeek.getDate() + 7);
      document.getElementById('dueDate').value = nextWeek.toISOString().split('T')[0];
      
      // Validation to ensure due date is after start date
      document.getElementById('startDate').addEventListener('change', function() {
        const dueDate = document.getElementById('dueDate');
        if (this.value > dueDate.value) {
          dueDate.value = this.value;
        }
        dueDate.min = this.value;
      });
    });
  </script>
</body>
</html>